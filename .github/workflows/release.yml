name: Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Verify Swift installation
      run: |
        swift --version
        SWIFT_VERSION=$(swift --version | head -n1 | grep -oE '[0-9]+\.[0-9]+(\.[0-9]+)?' | head -n1)
        MAJOR_VERSION=$(echo $SWIFT_VERSION | cut -d. -f1)
        echo "Current Swift version: $SWIFT_VERSION (major: $MAJOR_VERSION)"
        
        if [ "$MAJOR_VERSION" -lt 6 ]; then
          echo "Swift 6+ required but found Swift $SWIFT_VERSION"
          echo "Installing Swift 6 toolchain using swiftly..."
          
          # Install swiftly
          curl -O https://download.swift.org/swiftly/darwin/swiftly.pkg
          installer -pkg swiftly.pkg -target CurrentUserHomeDirectory
          
          # Initialize swiftly and update environment
          ~/.swiftly/bin/swiftly init --quiet-shell-followup
          
          # Source the environment first
          . "${SWIFTLY_HOME_DIR:-$HOME/.swiftly}/env.sh"
          echo "$HOME/.swiftly/bin" >> $GITHUB_PATH
          hash -r
          
          # Check if swiftly init already installed Swift 6+
          UPDATED_SWIFT_VERSION=$(swift --version | head -n1 | grep -oE '[0-9]+\.[0-9]+(\.[0-9]+)?' | head -n1)
          UPDATED_MAJOR_VERSION=$(echo $UPDATED_SWIFT_VERSION | cut -d. -f1)
          echo "Updated Swift version after swiftly init: $UPDATED_SWIFT_VERSION (major: $UPDATED_MAJOR_VERSION)"
          
          if [ "$UPDATED_MAJOR_VERSION" -lt 6 ]; then
            echo "Still need Swift 6+, installing Swift 6.0.2..."
            ~/.swiftly/bin/swiftly install 6.0.2
            ~/.swiftly/bin/swiftly use 6.0.2
          else
            echo "Swift $UPDATED_SWIFT_VERSION already meets requirements (6+)"
          fi
          
          # Verify final installation
          swift --version
          
          # Clean up
          rm swiftly.pkg
        else
          echo "Swift $SWIFT_VERSION meets requirements (6+)"
        fi
        
    - name: Build binary
      run: |
        swift build -c release
        
    - name: Verify binary
      run: |
        ls -la .build/release/asbmutil
        .build/release/asbmutil --help
        
    - name: Generate version number
      id: version
      run: |
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION=$(date +'%Y.%m.%d')-$(echo ${{ github.sha }} | cut -c1-7)
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Generated version: $VERSION"
        
    - name: Create release zip
      run: |
        zip -j asbmutil-${{ steps.version.outputs.version }}.zip .build/release/asbmutil
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: asbmutil-${{ steps.version.outputs.version }}
        path: |
          .build/release/asbmutil
          asbmutil-${{ steps.version.outputs.version }}.zip
        
    - name: Create Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: asbmutil-${{ steps.version.outputs.version }}.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}